{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "flowl",
	"patterns": [
		{
			"include": "#fn"
		},
		{
			"include": "#var"
		},
		{
			"include": "#rewrite_var"
		},
		{
			"include": "#assignvar"
		},
		{
			"include": "#refvar"
		},
		{
			"include": "#co"
		},
		{
			"include": "#comment"
		},
		{
			"include": "#string"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#ident"
		},
		{
			"include": "#directive"
		},
		{
			"include": "#args"
		}

	],
	"repository": {
		"string": {
			"patterns": [{
				"name": "string.quoted.double.flowl",
				"match": "\"([^\"\\\\]|\\\\.)*\""
			}]
		},
		"refvar": {
			"patterns": [{
				"name": "entity.name.variable.flowl",
				"match": "\\$\\([a-zA-Z0-9_\\.]+\\)"
			}]
		},
		"ident": {
			"match": "[\\s=+-><%\\(\\)]*([0-9]+)[\\s=+-><%\\(\\)]*",
			"captures": {
				"1": {
					"name": ""
				}
			}
		},
		"var": {
			"match": "^\\s*(var)\\s+(\\w+)",
			"captures": {
				"1": {
					"name": "keyword.control.flowl"
				},
				"2": {
					"name": "entity.name.variable.flowl"
				}
			}
		},
		"rewrite_var": {
			"match": "^\\s*(\\w+)\\s*(<-)",
			"captures": {
				"1": {
					"name": "entity.name.variable.flowl"
				},
				"2": {
					"name": ""
				}
			}
		},
		"co": {
			"match": "^\\s*(co)\\s+(\\w+)\\s*",
			"captures": {
				"1": {
					"name": "keyword.control.flowl"
				},
				"2": {
					"name": "entity.name.function.flowl"
				}
			}
		},
		"fn": {
			"match": "^\\s*(fn)\\s+(\\w+)\\s*=\\s*(\\w+)\\s*{.*",
			"captures": {
				"1": {
					"name": "keyword.control.flowl"
				},
				"2": {
					"name": "entity.name.type.flowl"
				},
				"3": {
					"name": "entity.name.type.flowl"
				}
			}
		},
		"assignvar": {
			"match": "\\s*(->)\\s+(\\w+)\\s*",
			"captures": {
				"2": {
					"name": "entity.name.variable.flowl"
				}
			}
		},
		"comment": {
			"begin": "\\s*//",
			"end": "\\n",
			"name": "comment.line.double-slash"
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.flowl",
				"match": "^\\s*(switch|case|default|if|for|var|load|co|fn|event)\\b"
			}]
		},
		"directive": {
			"patterns": [{
				"name": "entity.name.function.macro.flowl",
				"match": "^\\s*(exit|println|sleep|if_none_exit)\\b"
			}]
		},
		"args": {
			"match": "^\\s*(args)\\s*=",
			"captures": {
				"1": {
					"name": "entity.name.variable.flowl"
				}
			}
		}
	},
	"scopeName": "source.flowl"
}